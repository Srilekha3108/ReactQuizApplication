export const data =[
    {
        question:"what is the primary function of the render() method in a react component?",
        option1: "To update the component's state",
        option2: "To return a React element describing how the UI should look",
        option3: "To handle user input",
        option4: "To set up event listeners",
        ans: 2,

    },
    {
        question: "which lifecycle method is called after a component is first rendered to the DOM?",
        option1: "componentDidUpdate",
        option2: "componentWillUnmount",
        option3: "componentDidMount",
        option4: "shouldComponentUpdate",
        ans: 3,

    },
    {
        question: "How do you create a new React component?",
        option1: "By extending the React.component class",
        option2: "By calling React.createComponent()",
        option3: "By using the createReactClass() function ",
        option4: "By invoking React.createElement()",
        ans: 1,
    },
    {
        question: "What is the purpose of props in a React component?",
        option1: "To manage the component's state",
        option2: "To configure the component's behavior",
        option3: "To pass data from a parent component to a child component",
        option4: "To control the component's lifecycle",
        ans: 3,
    },
    {
        question: "How do you handle events in React?",
        option1: "Using traditional HTML event handlers",
        option2: "By adding event listeners directly to the DOM",
        option3: "By passing a function to an event handler prop",
        option4: "By using jQuery event methods",
        ans: 3,
    },
    {
        question: "What is the UseState hook used for in a functional component?",
        option1: "To manage local state in a functional component",
        option2: "To access lifecycle methods",
        option3: "To perform side effects",
        option4: "To create context",
        ans: 1,
    },
    {
        question: "what does JSX stand for?",
        option1: "JavasScript XML",
        option2: "JavaScript Extension",
        option3: "JavaScript Syntax Extention",
        option4: "javaScript extended",
        ans: 1,
    },
    {
        question: "Which method is used to update the state in a class component?",
        option1: "setState()",
        option2: "updateState()",
        option3: "modifyState()",
        option4: "changeState()",
        ans: 1,
    },
    {
        question: "How do you pass data from a parent component to a child component?",
        option1: "Using State",
        option2: "Using props",
        option3: "Using context",
        option4: "Using refs",
        ans: 2,     
    },
    {
        question: "What does the jey prop do in a list of React elements?",
        option1: "Identifies each element uniquely to help React identify which items have changed",
        option2: "Stores the value of the item",
        option3: "Sets the CSS class of the item",
        option4: "Defines the event handler for the item",
        ans: 1,
    },
    {
        question: "How can you optimize performance in a React application?",
        option1: "By using the forceUpdate() method",
        option2: "By avoiding the use of fuctional components",
        option3: "By using PureComponent and React.memo" ,
        option4: "By increasing the number of components",
        ans: 3,
    },
    {
        question: "what is ReactDOM.render() used for?",
        option1: "To create a new React component",
        option2: "To mount a React component to a DOM node",
        option3: "To update the state of a React component",
        option4: "To handle events in React",
        ans: 2,
    },
    {
        question: "How can you share data between components without passing props?",
        option1: "By using refs",
        option2: "By using the context API",
        option3: "By using loacl storage",
        option4: "By directly modifying the DOM",
        ans: 2,
    },
    {
        question: "What is the difference between controlled and uncontrolled components?",
        option1: "Controlled components use state to manage their values, while uncontrolled components do not",
        option2: "Controlled components have o user input, whlie uncontrolled components do",
        option3: "Controlled components are managed by context, while uncontrolled components are managed by props",
        option4: "Controlled components are functional,while uncontrolled components are class-based",
        ans: 1,
    },
    {
        question: "What is the purpose of the useEffect hook in a functional component?",
        option1: "To manage the component's state",
        option2: "To perform side effects in fuction components",
        option3: "To create a new compponent",
        option4: "To handle component lifecycle methods",
        ans: 2,
    },
];
